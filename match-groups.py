import re
import commands


def match_rules():
#####match the IAS groups inside custom security-groups
####(System generated by IAS)
  fopen = open('./qa-ias.txt', 'r')
  ias_groups = fopen.read()

  f2 = open('./qa-ias-report', 'w')
  #cust_group = 'sg-c1cd72a5'
  #ias_group = 'sg-2d8b9648'
  result = []
  grp_dict = get_sg_ids('./qa-all.txt')
  for key in sorted(grp_dict.keys()):
    cust_group = grp_dict[key]
    print ">>>>", cust_group
    rules = commands.getoutput("aws --profile qa ec2 describe-security-groups --group-ids %s --output text" % cust_group)
    lines = rules.split("\n")
    for each_line in lines:
    ##print ">>>>", each_line
      group_name = re.search(r'sg\-[0-9a-z]*', each_line)
      if group_name:
        grp = group_name.group()
        ##print ">>group", grp
        if grp in ias_groups:
          print "IAS Group found inside %s" % grp
          result.append(grp)
 for item in result:
    f2.write(item + "\n")
  f2.close()
  return result


def get_sg_ids(filename):
  sg_dict = {}
  fopen = open(filename,'r')
  content = fopen.read()
  groups = re.findall(r'sg\-[0-9a-z]*',content)
  count = 0
  for grp in groups:
    if grp not in sg_dict:
      count = count + 1
      sg_dict[count] = grp
  return sg_dict
  fopen.close()

"""
  for key in sorted(sg_dict.keys()):
    print key, sg_dict[key]
"""

#print match_rules()
print get_sg_ids('./qa-ias.txt')
#print match_rules('sg-cea14faa')
